// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const proof = require('./../../zokrates/code/square/proof.json');
var Verifier = artifacts.require('Verifier');


// Test verification with correct proof


// - use the contents from proof.json generated from zokrates steps


// Test verification with incorrect proof


contract('TestVerifier', accounts => {
  const owner = accounts[0];
  const to = accounts[1];

  beforeEach(async () => {
    this.contract = await Verifier.new();
  });
  it("Test with generated correct proof", async () => {
    let zkproof = proof.proof
    let result = await this.contract.verifyTx(
      zkproof.a,
      zkproof.b,
      zkproof.c,
      proof.inputs
    )
    assert(result, true, "Verification failed")
  })

  it("Test with made up bad proof", async () => {
    var result = 0
    let zkproof = proof.proof
    try {
      result = await this.contract.verifyTx(
        zkproof.b,
        zkproof.b,
        zkproof.c,
        proof.inputs
      )
      aseert(result, 0, "Result is not updated.")
    } catch (e) {
      //do nothing 
    }
  })
})