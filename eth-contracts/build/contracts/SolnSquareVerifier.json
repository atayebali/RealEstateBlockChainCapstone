{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "OwnerShipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "SolutionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "pause",
          "type": "bool"
        }
      ],
      "name": "setPause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "verifyAddress",
          "type": "address"
        }
      ],
      "name": "solutionAdded",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"OwnerShipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"SolutionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpaused\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"pause\",\"type\":\"bool\"}],\"name\":\"setPause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"verifyAddress\",\"type\":\"address\"}],\"name\":\"solutionAdded\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"project:/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0x795761c3e83e79da7cacbb4d838f0702a3f0f50e8864e51b1a2abe8bb8602a0a\",\"urls\":[\"bzz-raw://db48baaab45519deae221513c86baa2ab78b21129005aa14cf9b7f0d411dc7c4\",\"dweb:/ipfs/Qmdvo3cedCo4rZonc6u77q6Xsg7akEtGmVUCH7LU5MhYuj\"]},\"project:/contracts/Oraclize.sol\":{\"keccak256\":\"0xe5ebe286b4624095629f76c6ac8dbad3cb305fbdb43fff09e4eebed35a05b49c\",\"urls\":[\"bzz-raw://681373c60944fa44771ccea64da3a0e1b428255757df53cfee06eae96f4ac91d\",\"dweb:/ipfs/QmWS7E26x3aXyYEZSzhTTpr8Pu11y5NK9p9iMwwvm7tMsz\"]},\"project:/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0xafbe3a34abaa68daeaedd8c5db9133965792a3f2b1b13b6f3f540a10f19536c0\",\"urls\":[\"bzz-raw://c18b915faef1f4737942902b6fe273f121d29740f7f9f047019d8c0154a1e30b\",\"dweb:/ipfs/QmNywJm8v2pYjNboYWbCCXLwDTMAKZx5MeKeEVpjBb2jrs\"]},\"project:/contracts/verifier.sol\":{\"keccak256\":\"0x0a9ce40042230714fea658d76f7e551fd965d543f5b97a15f8ac33b35dcb5233\",\"urls\":[\"bzz-raw://7749350db1a2be4e91efced4ce7fb09ae3507eb9b589c324a34853df2a7be69a\",\"dweb:/ipfs/QmbXKoFd9D1HiW3JBeikJJE1W7Z1gHGC3b2XAkoBAvJwxn\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280600b81526020017f437573746f6d546f6b656e0000000000000000000000000000000000000000008152506040518060400160405280600281526020017f43430000000000000000000000000000000000000000000000000000000000008152506040518060600160405280603f815260200162003424603f9139336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f143e5287faad4318baa07178f135451e874bf0ab18ac3e5fe90d52756dc8e3d56000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a160008060146101000a81548160ff021916908315150217905550620001806301ffc9a760e01b6200021c60201b60201c565b620001986380ac58cd60e01b6200021c60201b60201c565b620001b063780e9d6360e01b6200021c60201b60201c565b82600f9080519060200190620001c8929190620002bc565b508160109080519060200190620001e1929190620002bc565b508060119080519060200190620001fa929190620002bc565b5062000213635b5e139f60e01b6200021c60201b60201c565b5050506200036b565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156200025057600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002ff57805160ff191683800117855562000330565b8280016001018555821562000330579182015b828111156200032f57825182559160200191906001019062000312565b5b5090506200033f919062000343565b5090565b6200036891905b80821115620003645760008160009055506001016200034a565b5090565b90565b6130a9806200037b6000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c806370a08231116100c3578063bedb86fb1161007c578063bedb86fb146109f6578063c87b56dd14610a26578063d3fc986414610acd578063d547cfb714610bca578063e985e9c514610c4d578063f2fde38b14610cc957610158565b806370a082311461072e578063893d20e81461078657806395d89b41146107d057806399b1f37f14610853578063a22cb465146108a1578063b88d4fde146108f157610158565b806327dc297e1161011557806327dc297e1461038d5780632f745c591461045257806338bbfa50146104b457806342842e0e146106105780634f6ccce71461067e5780636352211e146106c057610158565b806301ffc9a71461015d57806306fdde03146101c2578063081812fc14610245578063095ea7b3146102b357806318160ddd1461030157806323b872dd1461031f575b600080fd5b6101a86004803603602081101561017357600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610d0d565b604051808215151515815260200191505060405180910390f35b6101ca610d75565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561020a5780820151818401526020810190506101ef565b50505050905090810190601f1680156102375780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102716004803603602081101561025b57600080fd5b8101908080359060200190929190505050610e17565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102ff600480360360408110156102c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ecf565b005b6103096110b1565b6040518082815260200191505060405180910390f35b61038b6004803603606081101561033557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110be565b005b610450600480360360408110156103a357600080fd5b8101908080359060200190929190803590602001906401000000008111156103ca57600080fd5b8201836020820111156103dc57600080fd5b803590602001918460018302840111640100000000831117156103fe57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506110e1565b005b61049e6004803603604081101561046857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611124565b6040518082815260200191505060405180910390f35b61060e600480360360608110156104ca57600080fd5b8101908080359060200190929190803590602001906401000000008111156104f157600080fd5b82018360208201111561050357600080fd5b8035906020019184600183028401116401000000008311171561052557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561058857600080fd5b82018360208201111561059a57600080fd5b803590602001918460018302840111640100000000831117156105bc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611197565b005b61067c6004803603606081101561062657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061119c565b005b6106aa6004803603602081101561069457600080fd5b81019080803590602001909291905050506111bc565b6040518082815260200191505060405180910390f35b6106ec600480360360208110156106d657600080fd5b81019080803590602001909291905050506111f0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107706004803603602081101561074457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061122d565b6040518082815260200191505060405180910390f35b61078e61127d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107d86112a6565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156108185780820151818401526020810190506107fd565b50505050905090810190601f1680156108455780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61089f6004803603604081101561086957600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611348565b005b6108ef600480360360408110156108b757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506115c2565b005b6109f46004803603608081101561090757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561096e57600080fd5b82018360208201111561098057600080fd5b803590602001918460018302840111640100000000831117156109a257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506116fc565b005b610a2460048036036020811015610a0c57600080fd5b81019080803515159060200190929190505050611722565b005b610a5260048036036020811015610a3c57600080fd5b8101908080359060200190929190505050611874565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a92578082015181840152602081019050610a77565b50505050905090810190601f168015610abf5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610bb060048036036060811015610ae357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610b2a57600080fd5b820183602082011115610b3c57600080fd5b80359060200191846001830284011164010000000083111715610b5e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061193b565b604051808215151515815260200191505060405180910390f35b610bd2611a35565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610c12578082015181840152602081019050610bf7565b50505050905090810190601f168015610c3f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610caf60048036036040811015610c6357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ad7565b604051808215151515815260200191505060405180910390f35b610d0b60048036036020811015610cdf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b6b565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e0d5780601f10610de257610100808354040283529160200191610e0d565b820191906000526020600020905b815481529060010190602001808311610df057829003601f168201915b5050505050905090565b6000610e2282611d76565b610e94576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f417070726f76616c20646f6573206e6f7420657869737400000000000000000081525060200191505060405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610ed8816111f0565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f5c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602881526020018061304d6028913960400191505060405180910390fd5b610f6461127d565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610fa35750610fa23383611ad7565b5b610ff8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806130066022913960400191505060405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661106b836111f0565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000600880549050905090565b6110c83382611de8565b6110d157600080fd5b6110dc838383611e7d565b505050565b611120828260006040519080825280601f01601f19166020018201604052801561111a5781602001600182028038833980820191505090505b50611197565b5050565b600061112f8361122d565b821061113a57600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061118457fe5b9060005260206000200154905092915050565b505050565b6111b7838383604051806020016040528060008152506116fc565b505050565b60006111c66110b1565b82106111d157600080fd5b600882815481106111de57fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000611276600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611ea1565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060108054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561133e5780601f106113135761010080835404028352916020019161133e565b820191906000526020600020905b81548152906001019060200180831161132157829003601f168201915b5050505050905090565b816014600082815260200190815260200160002060010160149054906101000a900460ff16156113e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f546865206b657920697320756e6971756500000000000000000000000000000081525060200191505060405180910390fd5b6113e8612efb565b604051806060016040528060138054905081526020018473ffffffffffffffffffffffffffffffffffffffff168152602001600115158152509050601381908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690831515021790555050505080601460008681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff0219169083151502179055509050507f078793128cefb19aac38a33f9e5df39f67716907f6d747e8065545699e0b2b8d816000015184604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150505050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156115fb57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6117078484846110be565b61171384848484611eaf565b61171c57600080fd5b50505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146117e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4d757374206265206f776e657220746f2065786563757465000000000000000081525060200191505060405180910390fd5b80600060146101000a81548160ff021916908315150217905550600060149054906101000a900460ff1615611844577f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e75260405160405180910390a1611871565b7fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d1693360405160405180910390a15b50565b606061187f82611d76565b61188857600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561192f5780601f106119045761010080835404028352916020019161192f565b820191906000526020600020905b81548152906001019060200180831161191257829003601f168201915b50505050509050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146119ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4d757374206265206f776e657220746f2065786563757465000000000000000081525060200191505060405180910390fd5b611a098484612098565b611a12836120b9565b611a1b83611d76565b15611a295760019050611a2e565b600090505b9392505050565b606060118054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611acd5780601f10611aa257610100808354040283529160200191611acd565b820191906000526020600020905b815481529060010190602001808311611ab057829003601f168201915b5050505050905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611c2d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4d757374206265206f776e657220746f2065786563757465000000000000000081525060200191505060405180910390fd5b808073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611ccf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4d75737420626520612076616c6964206164647265730000000000000000000081525060200191505060405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f143e5287faad4318baa07178f135451e874bf0ab18ac3e5fe90d52756dc8e3d582604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600080611df4836111f0565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611e6357508373ffffffffffffffffffffffffffffffffffffffff16611e4b84610e17565b73ffffffffffffffffffffffffffffffffffffffff16145b80611e745750611e738185611ad7565b5b91505092915050565b611e888383836121a7565b611e92838261243c565b611e9c82826125da565b505050565b600081600001549050919050565b6000611ed08473ffffffffffffffffffffffffffffffffffffffff166126a1565b611edd5760019050612090565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611fb8578082015181840152602081019050611f9d565b50505050905090810190601f168015611fe55780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561200757600080fd5b505af115801561201b573d6000803e3d6000fd5b505050506040513d602081101561203157600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6120a282826126ec565b6120ac82826125da565b6120b58161287b565b5050565b6120c281611d76565b6120cb57600080fd5b606061217960118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121665780601f1061213b57610100808354040283529160200191612166565b820191906000526020600020905b81548152906001019060200180831161214957829003601f168201915b5050505050612174846128c7565b6129f4565b9050806012600084815260200190815260200160002090805190602001906121a2929190612f34565b505050565b8273ffffffffffffffffffffffffffffffffffffffff166121c7826111f0565b73ffffffffffffffffffffffffffffffffffffffff1614612250576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f546f6b656e206973206e6f74206f776e6564206279207468652073656e64657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156122f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f546f2061646472657373206973206e6f742076616c696400000000000000000081525060200191505060405180910390fd5b6122fc81612a38565b612343600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612af6565b61238a600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612b19565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006124946001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050612b2f90919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114612581576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061250157fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061255957fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036125d39190612fb4565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91508082141580156126e357506000801b8214155b92505050919050565b6126f581611d76565b8061272d5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15612783576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806130286025913960400191505060405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061281c600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612b19565b808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b6060600082141561290f576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506129ef565b600082905060005b60008214612939578080600101915050600a828161293157fe5b049150612917565b6060816040519080825280601f01601f19166020018201604052801561296e5781602001600182028038833980820191505090505b50905060006001830390505b600086146129e757600a868161298c57fe5b0660300160f81b828280600190039350815181106129a657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a86816129df57fe5b04955061297a565b819450505050505b919050565b6060612a308383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250612b79565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612af35760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b612b0e60018260000154612b2f90919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000612b7183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612e3b565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015612bd55781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015612c5a57888181518110612c0157fe5b602001015160f81c60f81b838380600101945081518110612c1e57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612bec565b600090505b8751811015612ccd57878181518110612c7457fe5b602001015160f81c60f81b838380600101945081518110612c9157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612c5f565b600090505b8651811015612d4057868181518110612ce757fe5b602001015160f81c60f81b838380600101945081518110612d0457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612cd2565b600090505b8551811015612db357858181518110612d5a57fe5b602001015160f81c60f81b838380600101945081518110612d7757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612d45565b600090505b8451811015612e2657848181518110612dcd57fe5b602001015160f81c60f81b838380600101945081518110612dea57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612db8565b82995050505050505050505095945050505050565b6000838311158290612ee8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612ead578082015181840152602081019050612e92565b50505050905090810190601f168015612eda5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b604051806060016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612f7557805160ff1916838001178555612fa3565b82800160010185558215612fa3579182015b82811115612fa2578251825591602001919060010190612f87565b5b509050612fb09190612fe0565b5090565b815481835581811115612fdb57818360005260206000209182019101612fda9190612fe0565b5b505050565b61300291905b80821115612ffe576000816000905550600101612fe6565b5090565b9056fe4e6f7420656e6f75676874207065726d697373696f6e7320746f2065786563757465546f6b656e20657869737473206f722041646472657373206973206e6f742076616c69642143616c6c657220697320616c726561647920616e206f776e6572206f66207468697320746f6b656ea265627a7a72315820bae34eef4eecdc70ca12ec4b6253dd8c872749c4fe742b2585537cdfa21f28c264736f6c6343000510003268747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101585760003560e01c806370a08231116100c3578063bedb86fb1161007c578063bedb86fb146109f6578063c87b56dd14610a26578063d3fc986414610acd578063d547cfb714610bca578063e985e9c514610c4d578063f2fde38b14610cc957610158565b806370a082311461072e578063893d20e81461078657806395d89b41146107d057806399b1f37f14610853578063a22cb465146108a1578063b88d4fde146108f157610158565b806327dc297e1161011557806327dc297e1461038d5780632f745c591461045257806338bbfa50146104b457806342842e0e146106105780634f6ccce71461067e5780636352211e146106c057610158565b806301ffc9a71461015d57806306fdde03146101c2578063081812fc14610245578063095ea7b3146102b357806318160ddd1461030157806323b872dd1461031f575b600080fd5b6101a86004803603602081101561017357600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610d0d565b604051808215151515815260200191505060405180910390f35b6101ca610d75565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561020a5780820151818401526020810190506101ef565b50505050905090810190601f1680156102375780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102716004803603602081101561025b57600080fd5b8101908080359060200190929190505050610e17565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102ff600480360360408110156102c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ecf565b005b6103096110b1565b6040518082815260200191505060405180910390f35b61038b6004803603606081101561033557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110be565b005b610450600480360360408110156103a357600080fd5b8101908080359060200190929190803590602001906401000000008111156103ca57600080fd5b8201836020820111156103dc57600080fd5b803590602001918460018302840111640100000000831117156103fe57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506110e1565b005b61049e6004803603604081101561046857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611124565b6040518082815260200191505060405180910390f35b61060e600480360360608110156104ca57600080fd5b8101908080359060200190929190803590602001906401000000008111156104f157600080fd5b82018360208201111561050357600080fd5b8035906020019184600183028401116401000000008311171561052557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561058857600080fd5b82018360208201111561059a57600080fd5b803590602001918460018302840111640100000000831117156105bc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611197565b005b61067c6004803603606081101561062657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061119c565b005b6106aa6004803603602081101561069457600080fd5b81019080803590602001909291905050506111bc565b6040518082815260200191505060405180910390f35b6106ec600480360360208110156106d657600080fd5b81019080803590602001909291905050506111f0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107706004803603602081101561074457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061122d565b6040518082815260200191505060405180910390f35b61078e61127d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107d86112a6565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156108185780820151818401526020810190506107fd565b50505050905090810190601f1680156108455780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61089f6004803603604081101561086957600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611348565b005b6108ef600480360360408110156108b757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506115c2565b005b6109f46004803603608081101561090757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561096e57600080fd5b82018360208201111561098057600080fd5b803590602001918460018302840111640100000000831117156109a257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506116fc565b005b610a2460048036036020811015610a0c57600080fd5b81019080803515159060200190929190505050611722565b005b610a5260048036036020811015610a3c57600080fd5b8101908080359060200190929190505050611874565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a92578082015181840152602081019050610a77565b50505050905090810190601f168015610abf5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610bb060048036036060811015610ae357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610b2a57600080fd5b820183602082011115610b3c57600080fd5b80359060200191846001830284011164010000000083111715610b5e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061193b565b604051808215151515815260200191505060405180910390f35b610bd2611a35565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610c12578082015181840152602081019050610bf7565b50505050905090810190601f168015610c3f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610caf60048036036040811015610c6357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ad7565b604051808215151515815260200191505060405180910390f35b610d0b60048036036020811015610cdf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b6b565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e0d5780601f10610de257610100808354040283529160200191610e0d565b820191906000526020600020905b815481529060010190602001808311610df057829003601f168201915b5050505050905090565b6000610e2282611d76565b610e94576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f417070726f76616c20646f6573206e6f7420657869737400000000000000000081525060200191505060405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610ed8816111f0565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f5c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602881526020018061304d6028913960400191505060405180910390fd5b610f6461127d565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610fa35750610fa23383611ad7565b5b610ff8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806130066022913960400191505060405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661106b836111f0565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000600880549050905090565b6110c83382611de8565b6110d157600080fd5b6110dc838383611e7d565b505050565b611120828260006040519080825280601f01601f19166020018201604052801561111a5781602001600182028038833980820191505090505b50611197565b5050565b600061112f8361122d565b821061113a57600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061118457fe5b9060005260206000200154905092915050565b505050565b6111b7838383604051806020016040528060008152506116fc565b505050565b60006111c66110b1565b82106111d157600080fd5b600882815481106111de57fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000611276600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611ea1565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060108054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561133e5780601f106113135761010080835404028352916020019161133e565b820191906000526020600020905b81548152906001019060200180831161132157829003601f168201915b5050505050905090565b816014600082815260200190815260200160002060010160149054906101000a900460ff16156113e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f546865206b657920697320756e6971756500000000000000000000000000000081525060200191505060405180910390fd5b6113e8612efb565b604051806060016040528060138054905081526020018473ffffffffffffffffffffffffffffffffffffffff168152602001600115158152509050601381908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690831515021790555050505080601460008681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff0219169083151502179055509050507f078793128cefb19aac38a33f9e5df39f67716907f6d747e8065545699e0b2b8d816000015184604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150505050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156115fb57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6117078484846110be565b61171384848484611eaf565b61171c57600080fd5b50505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146117e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4d757374206265206f776e657220746f2065786563757465000000000000000081525060200191505060405180910390fd5b80600060146101000a81548160ff021916908315150217905550600060149054906101000a900460ff1615611844577f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e75260405160405180910390a1611871565b7fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d1693360405160405180910390a15b50565b606061187f82611d76565b61188857600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561192f5780601f106119045761010080835404028352916020019161192f565b820191906000526020600020905b81548152906001019060200180831161191257829003601f168201915b50505050509050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146119ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4d757374206265206f776e657220746f2065786563757465000000000000000081525060200191505060405180910390fd5b611a098484612098565b611a12836120b9565b611a1b83611d76565b15611a295760019050611a2e565b600090505b9392505050565b606060118054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611acd5780601f10611aa257610100808354040283529160200191611acd565b820191906000526020600020905b815481529060010190602001808311611ab057829003601f168201915b5050505050905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611c2d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4d757374206265206f776e657220746f2065786563757465000000000000000081525060200191505060405180910390fd5b808073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611ccf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4d75737420626520612076616c6964206164647265730000000000000000000081525060200191505060405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f143e5287faad4318baa07178f135451e874bf0ab18ac3e5fe90d52756dc8e3d582604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600080611df4836111f0565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611e6357508373ffffffffffffffffffffffffffffffffffffffff16611e4b84610e17565b73ffffffffffffffffffffffffffffffffffffffff16145b80611e745750611e738185611ad7565b5b91505092915050565b611e888383836121a7565b611e92838261243c565b611e9c82826125da565b505050565b600081600001549050919050565b6000611ed08473ffffffffffffffffffffffffffffffffffffffff166126a1565b611edd5760019050612090565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611fb8578082015181840152602081019050611f9d565b50505050905090810190601f168015611fe55780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561200757600080fd5b505af115801561201b573d6000803e3d6000fd5b505050506040513d602081101561203157600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6120a282826126ec565b6120ac82826125da565b6120b58161287b565b5050565b6120c281611d76565b6120cb57600080fd5b606061217960118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121665780601f1061213b57610100808354040283529160200191612166565b820191906000526020600020905b81548152906001019060200180831161214957829003601f168201915b5050505050612174846128c7565b6129f4565b9050806012600084815260200190815260200160002090805190602001906121a2929190612f34565b505050565b8273ffffffffffffffffffffffffffffffffffffffff166121c7826111f0565b73ffffffffffffffffffffffffffffffffffffffff1614612250576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f546f6b656e206973206e6f74206f776e6564206279207468652073656e64657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156122f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f546f2061646472657373206973206e6f742076616c696400000000000000000081525060200191505060405180910390fd5b6122fc81612a38565b612343600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612af6565b61238a600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612b19565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006124946001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050612b2f90919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114612581576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061250157fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061255957fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036125d39190612fb4565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91508082141580156126e357506000801b8214155b92505050919050565b6126f581611d76565b8061272d5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15612783576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806130286025913960400191505060405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061281c600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612b19565b808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b6060600082141561290f576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506129ef565b600082905060005b60008214612939578080600101915050600a828161293157fe5b049150612917565b6060816040519080825280601f01601f19166020018201604052801561296e5781602001600182028038833980820191505090505b50905060006001830390505b600086146129e757600a868161298c57fe5b0660300160f81b828280600190039350815181106129a657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a86816129df57fe5b04955061297a565b819450505050505b919050565b6060612a308383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250612b79565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612af35760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b612b0e60018260000154612b2f90919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000612b7183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612e3b565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015612bd55781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015612c5a57888181518110612c0157fe5b602001015160f81c60f81b838380600101945081518110612c1e57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612bec565b600090505b8751811015612ccd57878181518110612c7457fe5b602001015160f81c60f81b838380600101945081518110612c9157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612c5f565b600090505b8651811015612d4057868181518110612ce757fe5b602001015160f81c60f81b838380600101945081518110612d0457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612cd2565b600090505b8551811015612db357858181518110612d5a57fe5b602001015160f81c60f81b838380600101945081518110612d7757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612d45565b600090505b8451811015612e2657848181518110612dcd57fe5b602001015160f81c60f81b838380600101945081518110612dea57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612db8565b82995050505050505050505095945050505050565b6000838311158290612ee8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612ead578082015181840152602081019050612e92565b50505050905090810190601f168015612eda5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b604051806060016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612f7557805160ff1916838001178555612fa3565b82800160010185558215612fa3579182015b82811115612fa2578251825591602001919060010190612f87565b5b509050612fb09190612fe0565b5090565b815481835581811115612fdb57818360005260206000209182019101612fda9190612fe0565b5b505050565b61300291905b80821115612ffe576000816000905550600101612fe6565b5090565b9056fe4e6f7420656e6f75676874207065726d697373696f6e7320746f2065786563757465546f6b656e20657869737473206f722041646472657373206973206e6f742076616c69642143616c6c657220697320616c726561647920616e206f776e6572206f66207468697320746f6b656ea265627a7a72315820bae34eef4eecdc70ca12ec4b6253dd8c872749c4fe742b2585537cdfa21f28c264736f6c63430005100032",
  "sourceMap": "352:1323:6:-;;;20635:308:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;593:10;584:6;;:19;;;;;;;;;;;;;;;;;;618:28;639:6;;;;;;;;;;;618:28;;;;;;;;;;;;;;;;;;;;;;1954:5;1944:7;;:15;;;;;;;;;;;;;;;;;;3154:40;2752:10;3173:20;;3154:18;;;:40;;:::i;:::-;5407;5282:10;5426:20;;5407:18;;;:40;;:::i;:::-;13258:51;12864:10;13277:31;;13258:18;;;:51;;:::i;:::-;20808:4;20800:5;:12;;;;;;;;;;;;:::i;:::-;;20832:6;20822:7;:16;;;;;;;;;;;;:::i;:::-;;20864:12;20848:13;:28;;;;;;;;;;;;:::i;:::-;;20887:49;20446:10;20906:29;;20887:18;;;:49;;:::i;:::-;20635:308;;;352:1323:6;;3532:158:4;3622:10;3607:25;;:11;:25;;;;;3599:34;;;;;;3679:4;3643:20;:33;3664:11;3643:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3532:158;:::o;352:1323:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "352:1323:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;352:1323:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3292:161:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3292:161:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;21026:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21026:83:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6681:225;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6681:225:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5980:695;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5980:695:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14051:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7911:210;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7911:210:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14801:122:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14801:122:5;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14801:122:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14801:122:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14801:122:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14801:122:5;;;;;;;;;;;;;;;:::i;:::-;;13689:210:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13689:210:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14929:166:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14929:166:5;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14929:166:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14929:166:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14929:166:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14929:166:5;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14929:166:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14929:166:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14929:166:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14929:166:5;;;;;;;;;;;;;;;:::i;:::-;;8127:162:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8127:162:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14482:148;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14482:148:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5746:157;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5746:157:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5460:280;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5460:280:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1552:75;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;21115:87;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21115:87:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1082:369:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1082:369:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7198:213:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7198:213:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8295:249;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;8295:249:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8295:249:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8295:249:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8295:249:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8295:249:4;;;;;;;;;;;;;;;:::i;:::-;;2494:185;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2494:185:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;21313:151;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;21313:151:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21313:151:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22317:322;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;22317:322:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;22317:322:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;22317:322:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;22317:322:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;22317:322:4;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;21208:99;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21208:99:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7732:173;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7732:173:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1222:324;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1222:324:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;3292:161;3386:4;3413:20;:33;3434:11;3413:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3406:40;;3292:161;;;:::o;21026:83::-;21065:13;21097:5;21090:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21026:83;:::o;6681:225::-;6740:7;6814:16;6822:7;6814;:16::i;:::-;6806:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6875:15;:24;6891:7;6875:24;;;;;;;;;;;;;;;;;;;;;6868:31;;6681:225;;;:::o;5980:695::-;6142:16;6150:7;6142;:16::i;:::-;6136:22;;:2;:22;;;;6115:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6369:10;:8;:10::i;:::-;6355:24;;:10;:24;;;:60;;;;6383:32;6400:10;6412:2;6383:16;:32::i;:::-;6355:60;6334:141;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6559:2;6532:15;:24;6548:7;6532:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;6660:7;6656:2;6629:39;;6638:16;6646:7;6638;:16::i;:::-;6629:39;;;;;;;;;;;;5980:695;;:::o;14051:94::-;14095:7;14121:10;:17;;;;14114:24;;14051:94;:::o;7911:210::-;8031:39;8050:10;8062:7;8031:18;:39::i;:::-;8023:48;;;;;;8082:32;8096:4;8102:2;8106:7;8082:13;:32::i;:::-;7911:210;;;:::o;14801:122:5:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:5;;;;14876:10;:40::i;:::-;14801:122;;:::o;13689:210:4:-;13793:7;13832:16;13842:5;13832:9;:16::i;:::-;13824:5;:24;13816:33;;;;;;13866:12;:19;13879:5;13866:19;;;;;;;;;;;;;;;13886:5;13866:26;;;;;;;;;;;;;;;;13859:33;;13689:210;;;;:::o;14929:166:5:-;;;;:::o;8127:162:4:-;8243:39;8260:4;8266:2;8270:7;8243:39;;;;;;;;;;;;:16;:39::i;:::-;8127:162;;;:::o;14482:148::-;14540:7;14575:13;:11;:13::i;:::-;14567:5;:21;14559:30;;;;;;14606:10;14617:5;14606:17;;;;;;;;;;;;;;;;14599:24;;14482:148;;;:::o;5746:157::-;5801:7;5876:11;:20;5888:7;5876:20;;;;;;;;;;;;;;;;;;;;;5869:27;;5746:157;;;:::o;5460:280::-;5515:7;5699:34;:17;:24;5717:5;5699:24;;;;;;;;;;;;;;;:32;:34::i;:::-;5692:41;;5460:280;;;:::o;1552:75::-;1588:7;1614:6;;;;;;;;;;;1607:13;;1552:75;:::o;21115:87::-;21156:13;21188:7;21181:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21115:87;:::o;1082:369:6:-;1171:3;1015:9;:14;1025:3;1015:14;;;;;;;;;;;:21;;;;;;;;;;;;1014:22;1006:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1190:24;;:::i;:::-;1217:96;;;;;;;;1239:12;:19;;;;1217:96;;;;1272:13;1217:96;;;;;;1299:4;1217:96;;;;;1190:123;;1323:12;1341:8;1323:27;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1323:27:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1377:8;1360:9;:14;1370:3;1360:14;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1400:44;1414:8;:14;;;1430:13;1400:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;1068:1;1082:369;;;:::o;7198:213:4:-;7283:10;7277:16;;:2;:16;;;;7269:25;;;;;;7341:8;7304:18;:30;7323:10;7304:30;;;;;;;;;;;;;;;:34;7335:2;7304:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;7391:2;7364:40;;7379:10;7364:40;;;7395:8;7364:40;;;;;;;;;;;;;;;;;;;;;;7198:213;;:::o;8295:249::-;8439:31;8452:4;8458:2;8462:7;8439:12;:31::i;:::-;8488:48;8511:4;8517:2;8521:7;8530:5;8488:22;:48::i;:::-;8480:57;;;;;;8295:249;;;;:::o;2494:185::-;825:6;;;;;;;;;;;811:20;;:10;:20;;;803:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2561:5;2551:7;;:15;;;;;;;;;;;;;;;;;;2580:7;;;;;;;;;;;2576:97;;;2608:8;;;;;;;;;;2576:97;;;2652:10;;;;;;;;;;2576:97;2494:185;:::o;21313:151::-;21371:13;21404:16;21412:7;21404;:16::i;:::-;21396:25;;;;;;21438:10;:19;21449:7;21438:19;;;;;;;;;;;21431:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21313:151;;;:::o;22317:322::-;22440:4;825:6;;;;;;;;;;;811:20;;:10;:20;;;803:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22456:24;22468:2;22472:7;22456:11;:24::i;:::-;22490:26;22508:7;22490:17;:26::i;:::-;22530:22;22544:7;22530:13;:22::i;:::-;22526:107;;;22575:4;22568:11;;;;22526:107;22617:5;22610:12;;870:1;22317:322;;;;;:::o;21208:99::-;21255:13;21287;21280:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21208:99;:::o;7732:173::-;7836:4;7863:18;:25;7882:5;7863:25;;;;;;;;;;;;;;;:35;7889:8;7863:35;;;;;;;;;;;;;;;;;;;;;;;;;7856:42;;7732:173;;;;:::o;1222:324::-;825:6;;;;;;;;;;;811:20;;:10;:20;;;803:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1320:8;953:4;937:21;;:4;:21;;;929:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1486:8;1477:6;;:17;;;;;;;;;;;;;;;;;;1509:30;1530:8;1509:30;;;;;;;;;;;;;;;;;;;;;;870:1;1222:324;:::o;8738:152::-;8795:4;8811:13;8827:11;:20;8839:7;8827:20;;;;;;;;;;;;;;;;;;;;;8811:36;;8881:1;8864:19;;:5;:19;;;;8857:26;;;8738:152;;;:::o;9250:298::-;9359:4;9379:13;9395:16;9403:7;9395;:16::i;:::-;9379:32;;9440:5;9429:16;;:7;:16;;;:63;;;;9485:7;9461:31;;:20;9473:7;9461:11;:20::i;:::-;:31;;;9429:63;:111;;;;9508:32;9525:5;9532:7;9508:16;:32::i;:::-;9429:111;9421:120;;;9250:298;;;;:::o;15005:269::-;15120:38;15140:4;15146:2;15150:7;15120:19;:38::i;:::-;15169:47;15202:4;15208:7;15169:32;:47::i;:::-;15227:40;15255:2;15259:7;15227:27;:40::i;:::-;15005:269;;;:::o;1065:112:0:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;11625:431:4:-;11776:4;11797:15;:2;:13;;;:15::i;:::-;11792:58;;11835:4;11828:11;;;;11792:58;11860:13;11892:2;11876:36;;;11926:10;11950:4;11968:7;11989:5;11876:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11876:128:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11876:128:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11876:128:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11876:128:4;;;;;;;;;;;;;;;;11860:144;;4420:10;12032:16;;12022:26;;;:6;:26;;;;12014:35;;;11625:431;;;;;;;:::o;15529:196::-;15592:24;15604:2;15608:7;15592:11;:24::i;:::-;15627:40;15655:2;15659:7;15627:27;:40::i;:::-;15678;15710:7;15678:31;:40::i;:::-;15529:196;;:::o;21931:209::-;21996:16;22004:7;21996;:16::i;:::-;21988:25;;;;;;22023:23;22049:43;22059:13;22049:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22074:17;22083:7;22074:8;:17::i;:::-;22049:9;:43::i;:::-;22023:69;;22124:9;22102:10;:19;22113:7;22102:19;;;;;;;;;;;:31;;;;;;;;;;;;:::i;:::-;;21931:209;;:::o;10396:701::-;10603:4;10583:24;;:16;10591:7;10583;:16::i;:::-;:24;;;10575:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10737:1;10723:16;;:2;:16;;;;10715:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10803:23;10818:7;10803:14;:23::i;:::-;10904:35;:17;:23;10922:4;10904:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10949:33;:17;:21;10967:2;10949:21;;;;;;;;;;;;;;;:31;:33::i;:::-;11015:2;10992:11;:20;11004:7;10992:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11082:7;11078:2;11063:27;;11072:4;11063:27;;;;;;;;;;;;10396:701;;;:::o;17529:1140::-;17803:22;17828:32;17858:1;17828:12;:18;17841:4;17828:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;17803:57;;17870:18;17891:17;:26;17909:7;17891:26;;;;;;;;;;;;17870:47;;18035:14;18021:10;:28;18017:323;;18065:19;18087:12;:18;18100:4;18087:18;;;;;;;;;;;;;;;18106:14;18087:34;;;;;;;;;;;;;;;;18065:56;;18169:11;18136:12;:18;18149:4;18136:18;;;;;;;;;;;;;;;18155:10;18136:30;;;;;;;;;;;;;;;:44;;;;18285:10;18252:17;:30;18270:11;18252:30;;;;;;;;;;;:43;;;;18017:323;;18426:12;:18;18439:4;18426:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;17529:1140;;;;:::o;16375:183::-;16488:12;:16;16501:2;16488:16;;;;;;;;;;;;;;;:23;;;;16459:17;:26;16477:7;16459:26;;;;;;;;;;;:52;;;;16521:12;:16;16534:2;16521:16;;;;;;;;;;;;;;;16543:7;16521:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16521:30:4;;;;;;;;;;;;;;;;;;;;;;16375:183;;:::o;686:610:3:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;9705:492:4:-;9849:16;9857:7;9849;:16::i;:::-;:36;;;;9883:1;9869:16;;:2;:16;;;;9849:36;9845:114;;;9901:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9845:114;10065:2;10042:11;:20;10054:7;10042:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10077:33;:17;:21;10095:2;10077:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10182:7;10178:2;10157:33;;10166:10;10157:33;;;;;;;;;;;;9705:492;;:::o;16753:161::-;16856:10;:17;;;;16829:15;:24;16845:7;16829:24;;;;;;;;;;;:44;;;;16883:10;16899:7;16883:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16883:24:4;;;;;;;;;;;;;;;;;;;;;;16753:161;:::o;43271:465:5:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;43456:66;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:5;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;43601:100;;43664:2;43659;:7;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;12137:171:4:-;12236:1;12200:38;;:15;:24;12216:7;12200:24;;;;;;;;;;;;;;;;;;;;;:38;;;12196:106;;12289:1;12254:15;:24;12270:7;12254:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;12196:106;12137:171;:::o;1367:108:0:-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1183:178::-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;40282:1020:5:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:5;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;1732:187:1:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;352:1323:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.4.21 <0.6.0;\n\n//  define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\nimport \"./verifier.sol\";\nimport \"./ERC721Mintable.sol\";\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\n//  define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\ncontract SolnSquareVerifier is CustomERC721Token {\n    //  define a solutions struct that can hold an index & an address\n    struct Solution {\n        uint256 index;\n        address addr;\n        bool exists;\n    }\n\n    // TODO define an array of the above struct\n    Solution[] private solutionList;\n    // TODO define a mapping to store unique solutions submitted\n    mapping(bytes32 => Solution) solutions;\n\n    // TODO Create an event to emit when a solution is added\n    event SolutionAdded(uint256 index, address addr);\n\n    // TODO Create a function to add the solutions to the array and emit the event\n\n    modifier unique(bytes32 key) {\n        require(!solutions[key].exists, \"The key is unique\");\n        _;\n    }\n\n    function solutionAdded(bytes32 key, address verifyAddress)\n        public\n        unique(key)\n    {\n        Solution memory solution = Solution(\n            solutionList.length,\n            verifyAddress,\n            true\n        );\n        solutionList.push(solution);\n        solutions[key] = solution;\n        emit SolutionAdded(solution.index, verifyAddress);\n    }\n\n    // TODO Create a function to mint new NFT only after the solution has been verified\n    //  - make sure the solution is unique (has not been used before)\n    //  - make sure you handle metadata as well as tokenSuplly\n}\n",
  "sourcePath": "/workspaces/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7807
      ]
    },
    "id": 7808,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7728,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:6"
      },
      {
        "absolutePath": "project:/contracts/verifier.sol",
        "file": "./verifier.sol",
        "id": 7729,
        "nodeType": "ImportDirective",
        "scope": 7808,
        "sourceUnit": 8730,
        "src": "137:24:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7730,
        "nodeType": "ImportDirective",
        "scope": 7808,
        "sourceUnit": 1459,
        "src": "162:30:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 7731,
        "nodeType": "ImportDirective",
        "scope": 7808,
        "sourceUnit": 236,
        "src": "193:59:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7732,
              "name": "CustomERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1458,
              "src": "383:17:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomERC721Token_$1458",
                "typeString": "contract CustomERC721Token"
              }
            },
            "id": 7733,
            "nodeType": "InheritanceSpecifier",
            "src": "383:17:6"
          }
        ],
        "contractDependencies": [
          407,
          468,
          514,
          1003,
          1301,
          1414,
          1458,
          7726
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7807,
        "linearizedBaseContracts": [
          7807,
          1458,
          1414,
          7726,
          1301,
          1003,
          514,
          468,
          407
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7740,
            "members": [
              {
                "constant": false,
                "id": 7735,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7740,
                "src": "503:13:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7734,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "503:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7737,
                "name": "addr",
                "nodeType": "VariableDeclaration",
                "scope": 7740,
                "src": "526:12:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7736,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "526:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7739,
                "name": "exists",
                "nodeType": "VariableDeclaration",
                "scope": 7740,
                "src": "548:11:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7738,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "548:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7807,
            "src": "477:89:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7743,
            "name": "solutionList",
            "nodeType": "VariableDeclaration",
            "scope": 7807,
            "src": "620:31:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Solution_$7740_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.Solution[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7741,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7740,
                "src": "620:8:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7740_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              },
              "id": 7742,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "620:10:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Solution_$7740_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.Solution[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7747,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7807,
            "src": "722:38:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7740_storage_$",
              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7746,
              "keyType": {
                "id": 7744,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "730:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "722:28:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7740_storage_$",
                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7745,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7740,
                "src": "741:8:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7740_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7753,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7749,
                  "indexed": false,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7753,
                  "src": "848:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7748,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "848:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7751,
                  "indexed": false,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7753,
                  "src": "863:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7750,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "863:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "847:29:6"
            },
            "src": "828:49:6"
          },
          {
            "body": {
              "id": 7767,
              "nodeType": "Block",
              "src": "996:80:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1014:22:6",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7758,
                              "name": "solutions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7747,
                              "src": "1015:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7740_storage_$",
                                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7760,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7759,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7755,
                              "src": "1025:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1015:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7740_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7761,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7739,
                          "src": "1015:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546865206b657920697320756e69717565",
                        "id": 7763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1038:19:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c931fd18256cfb279e733001768fdcffe4836c2a06264603b3d32713b93b35c8",
                          "typeString": "literal_string \"The key is unique\""
                        },
                        "value": "The key is unique"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c931fd18256cfb279e733001768fdcffe4836c2a06264603b3d32713b93b35c8",
                          "typeString": "literal_string \"The key is unique\""
                        }
                      ],
                      "id": 7757,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8747,
                        8748
                      ],
                      "referencedDeclaration": 8748,
                      "src": "1006:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1006:52:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7765,
                  "nodeType": "ExpressionStatement",
                  "src": "1006:52:6"
                },
                {
                  "id": 7766,
                  "nodeType": "PlaceholderStatement",
                  "src": "1068:1:6"
                }
              ]
            },
            "documentation": null,
            "id": 7768,
            "name": "unique",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 7756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7755,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 7768,
                  "src": "983:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7754,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "983:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "982:13:6"
            },
            "src": "967:109:6",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7805,
              "nodeType": "Block",
              "src": "1180:271:6",
              "statements": [
                {
                  "assignments": [
                    7779
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7779,
                      "name": "solution",
                      "nodeType": "VariableDeclaration",
                      "scope": 7805,
                      "src": "1190:24:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7740_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7778,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7740,
                        "src": "1190:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7740_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7786,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7781,
                          "name": "solutionList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7743,
                          "src": "1239:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Solution_$7740_storage_$dyn_storage",
                            "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                          }
                        },
                        "id": 7782,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1239:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7783,
                        "name": "verifyAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7772,
                        "src": "1272:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 7784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1299:4:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7780,
                      "name": "Solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7740,
                      "src": "1217:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Solution_$7740_storage_ptr_$",
                        "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                      }
                    },
                    "id": 7785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1217:96:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7740_memory",
                      "typeString": "struct SolnSquareVerifier.Solution memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1190:123:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7790,
                        "name": "solution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7779,
                        "src": "1341:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7740_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Solution_$7740_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7787,
                        "name": "solutionList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7743,
                        "src": "1323:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$7740_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 7789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1323:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Solution_$7740_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                      }
                    },
                    "id": 7791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1323:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7792,
                  "nodeType": "ExpressionStatement",
                  "src": "1323:27:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7793,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7747,
                        "src": "1360:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7740_storage_$",
                          "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7795,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7794,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7770,
                        "src": "1370:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1360:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7740_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7796,
                      "name": "solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7779,
                      "src": "1377:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7740_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "1360:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7740_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7798,
                  "nodeType": "ExpressionStatement",
                  "src": "1360:25:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7800,
                          "name": "solution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7779,
                          "src": "1414:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solution_$7740_memory_ptr",
                            "typeString": "struct SolnSquareVerifier.Solution memory"
                          }
                        },
                        "id": 7801,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "index",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7735,
                        "src": "1414:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7802,
                        "name": "verifyAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7772,
                        "src": "1430:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7799,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7753,
                      "src": "1400:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1400:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7804,
                  "nodeType": "EmitStatement",
                  "src": "1395:49:6"
                }
              ]
            },
            "documentation": null,
            "id": 7806,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 7775,
                    "name": "key",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7770,
                    "src": "1171:3:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 7776,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7774,
                  "name": "unique",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7768,
                  "src": "1164:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes32_$",
                    "typeString": "modifier (bytes32)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1164:11:6"
              }
            ],
            "name": "solutionAdded",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7770,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 7806,
                  "src": "1105:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7769,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1105:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7772,
                  "name": "verifyAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7806,
                  "src": "1118:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7771,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1118:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1104:36:6"
            },
            "returnParameters": {
              "id": 7777,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1180:0:6"
            },
            "scope": 7807,
            "src": "1082:369:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7808,
        "src": "352:1323:6"
      }
    ],
    "src": "0:1676:6"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
      "exportedSymbols": {
        "SolnSquareVerifier": [
          7807
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 7728,
        "name": "PragmaDirective",
        "src": "0:32:6"
      },
      {
        "attributes": {
          "SourceUnit": 8730,
          "absolutePath": "project:/contracts/verifier.sol",
          "file": "./verifier.sol",
          "scope": 7808,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7729,
        "name": "ImportDirective",
        "src": "137:24:6"
      },
      {
        "attributes": {
          "SourceUnit": 1459,
          "absolutePath": "project:/contracts/ERC721Mintable.sol",
          "file": "./ERC721Mintable.sol",
          "scope": 7808,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7730,
        "name": "ImportDirective",
        "src": "162:30:6"
      },
      {
        "attributes": {
          "SourceUnit": 236,
          "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
          "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
          "scope": 7808,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7731,
        "name": "ImportDirective",
        "src": "193:59:6"
      },
      {
        "attributes": {
          "contractDependencies": [
            407,
            468,
            514,
            1003,
            1301,
            1414,
            1458,
            7726
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7807,
            1458,
            1414,
            7726,
            1301,
            1003,
            514,
            468,
            407
          ],
          "name": "SolnSquareVerifier",
          "scope": 7808
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "CustomERC721Token",
                  "referencedDeclaration": 1458,
                  "type": "contract CustomERC721Token"
                },
                "id": 7732,
                "name": "UserDefinedTypeName",
                "src": "383:17:6"
              }
            ],
            "id": 7733,
            "name": "InheritanceSpecifier",
            "src": "383:17:6"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.Solution",
              "name": "Solution",
              "scope": 7807,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "index",
                  "scope": 7740,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 7734,
                    "name": "ElementaryTypeName",
                    "src": "503:7:6"
                  }
                ],
                "id": 7735,
                "name": "VariableDeclaration",
                "src": "503:13:6"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "addr",
                  "scope": 7740,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 7736,
                    "name": "ElementaryTypeName",
                    "src": "526:7:6"
                  }
                ],
                "id": 7737,
                "name": "VariableDeclaration",
                "src": "526:12:6"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "exists",
                  "scope": 7740,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bool",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 7738,
                    "name": "ElementaryTypeName",
                    "src": "548:4:6"
                  }
                ],
                "id": 7739,
                "name": "VariableDeclaration",
                "src": "548:11:6"
              }
            ],
            "id": 7740,
            "name": "StructDefinition",
            "src": "477:89:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "solutionList",
              "scope": 7807,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct SolnSquareVerifier.Solution[]",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "struct SolnSquareVerifier.Solution[]"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7740,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7741,
                    "name": "UserDefinedTypeName",
                    "src": "620:8:6"
                  }
                ],
                "id": 7742,
                "name": "ArrayTypeName",
                "src": "620:10:6"
              }
            ],
            "id": 7743,
            "name": "VariableDeclaration",
            "src": "620:31:6"
          },
          {
            "attributes": {
              "constant": false,
              "name": "solutions",
              "scope": 7807,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 7744,
                    "name": "ElementaryTypeName",
                    "src": "730:7:6"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7740,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7745,
                    "name": "UserDefinedTypeName",
                    "src": "741:8:6"
                  }
                ],
                "id": 7746,
                "name": "Mapping",
                "src": "722:28:6"
              }
            ],
            "id": 7747,
            "name": "VariableDeclaration",
            "src": "722:38:6"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "SolutionAdded"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "index",
                      "scope": 7753,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7748,
                        "name": "ElementaryTypeName",
                        "src": "848:7:6"
                      }
                    ],
                    "id": 7749,
                    "name": "VariableDeclaration",
                    "src": "848:13:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "addr",
                      "scope": 7753,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7750,
                        "name": "ElementaryTypeName",
                        "src": "863:7:6"
                      }
                    ],
                    "id": 7751,
                    "name": "VariableDeclaration",
                    "src": "863:12:6"
                  }
                ],
                "id": 7752,
                "name": "ParameterList",
                "src": "847:29:6"
              }
            ],
            "id": 7753,
            "name": "EventDefinition",
            "src": "828:49:6"
          },
          {
            "attributes": {
              "documentation": null,
              "name": "unique",
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "key",
                      "scope": 7768,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 7754,
                        "name": "ElementaryTypeName",
                        "src": "983:7:6"
                      }
                    ],
                    "id": 7755,
                    "name": "VariableDeclaration",
                    "src": "983:11:6"
                  }
                ],
                "id": 7756,
                "name": "ParameterList",
                "src": "982:13:6"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c931fd18256cfb279e733001768fdcffe4836c2a06264603b3d32713b93b35c8",
                                  "typeString": "literal_string \"The key is unique\""
                                }
                              ],
                              "overloadedDeclarations": [
                                8747,
                                8748
                              ],
                              "referencedDeclaration": 8748,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7757,
                            "name": "Identifier",
                            "src": "1006:7:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "exists",
                                  "referencedDeclaration": 7739,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SolnSquareVerifier.Solution storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7747,
                                          "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                                          "value": "solutions"
                                        },
                                        "id": 7758,
                                        "name": "Identifier",
                                        "src": "1015:9:6"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7755,
                                          "type": "bytes32",
                                          "value": "key"
                                        },
                                        "id": 7759,
                                        "name": "Identifier",
                                        "src": "1025:3:6"
                                      }
                                    ],
                                    "id": 7760,
                                    "name": "IndexAccess",
                                    "src": "1015:14:6"
                                  }
                                ],
                                "id": 7761,
                                "name": "MemberAccess",
                                "src": "1015:21:6"
                              }
                            ],
                            "id": 7762,
                            "name": "UnaryOperation",
                            "src": "1014:22:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "546865206b657920697320756e69717565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"The key is unique\"",
                              "value": "The key is unique"
                            },
                            "id": 7763,
                            "name": "Literal",
                            "src": "1038:19:6"
                          }
                        ],
                        "id": 7764,
                        "name": "FunctionCall",
                        "src": "1006:52:6"
                      }
                    ],
                    "id": 7765,
                    "name": "ExpressionStatement",
                    "src": "1006:52:6"
                  },
                  {
                    "id": 7766,
                    "name": "PlaceholderStatement",
                    "src": "1068:1:6"
                  }
                ],
                "id": 7767,
                "name": "Block",
                "src": "996:80:6"
              }
            ],
            "id": 7768,
            "name": "ModifierDefinition",
            "src": "967:109:6"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "solutionAdded",
              "scope": 7807,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "key",
                      "scope": 7806,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 7769,
                        "name": "ElementaryTypeName",
                        "src": "1105:7:6"
                      }
                    ],
                    "id": 7770,
                    "name": "VariableDeclaration",
                    "src": "1105:11:6"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "verifyAddress",
                      "scope": 7806,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7771,
                        "name": "ElementaryTypeName",
                        "src": "1118:7:6"
                      }
                    ],
                    "id": 7772,
                    "name": "VariableDeclaration",
                    "src": "1118:21:6"
                  }
                ],
                "id": 7773,
                "name": "ParameterList",
                "src": "1104:36:6"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7777,
                "name": "ParameterList",
                "src": "1180:0:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7768,
                      "type": "modifier (bytes32)",
                      "value": "unique"
                    },
                    "id": 7774,
                    "name": "Identifier",
                    "src": "1164:6:6"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7770,
                      "type": "bytes32",
                      "value": "key"
                    },
                    "id": 7775,
                    "name": "Identifier",
                    "src": "1171:3:6"
                  }
                ],
                "id": 7776,
                "name": "ModifierInvocation",
                "src": "1164:11:6"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7779
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "solution",
                          "scope": 7805,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct SolnSquareVerifier.Solution",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Solution",
                              "referencedDeclaration": 7740,
                              "type": "struct SolnSquareVerifier.Solution"
                            },
                            "id": 7778,
                            "name": "UserDefinedTypeName",
                            "src": "1190:8:6"
                          }
                        ],
                        "id": 7779,
                        "name": "VariableDeclaration",
                        "src": "1190:24:6"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "struct SolnSquareVerifier.Solution memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7740,
                              "type": "type(struct SolnSquareVerifier.Solution storage pointer)",
                              "value": "Solution"
                            },
                            "id": 7780,
                            "name": "Identifier",
                            "src": "1217:8:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7743,
                                  "type": "struct SolnSquareVerifier.Solution storage ref[] storage ref",
                                  "value": "solutionList"
                                },
                                "id": 7781,
                                "name": "Identifier",
                                "src": "1239:12:6"
                              }
                            ],
                            "id": 7782,
                            "name": "MemberAccess",
                            "src": "1239:19:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7772,
                              "type": "address",
                              "value": "verifyAddress"
                            },
                            "id": 7783,
                            "name": "Identifier",
                            "src": "1272:13:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 7784,
                            "name": "Literal",
                            "src": "1299:4:6"
                          }
                        ],
                        "id": 7785,
                        "name": "FunctionCall",
                        "src": "1217:96:6"
                      }
                    ],
                    "id": 7786,
                    "name": "VariableDeclarationStatement",
                    "src": "1190:123:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Solution_$7740_memory_ptr",
                                  "typeString": "struct SolnSquareVerifier.Solution memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7743,
                                  "type": "struct SolnSquareVerifier.Solution storage ref[] storage ref",
                                  "value": "solutionList"
                                },
                                "id": 7787,
                                "name": "Identifier",
                                "src": "1323:12:6"
                              }
                            ],
                            "id": 7789,
                            "name": "MemberAccess",
                            "src": "1323:17:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7779,
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "value": "solution"
                            },
                            "id": 7790,
                            "name": "Identifier",
                            "src": "1341:8:6"
                          }
                        ],
                        "id": 7791,
                        "name": "FunctionCall",
                        "src": "1323:27:6"
                      }
                    ],
                    "id": 7792,
                    "name": "ExpressionStatement",
                    "src": "1323:27:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct SolnSquareVerifier.Solution storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct SolnSquareVerifier.Solution storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7747,
                                  "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                                  "value": "solutions"
                                },
                                "id": 7793,
                                "name": "Identifier",
                                "src": "1360:9:6"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7770,
                                  "type": "bytes32",
                                  "value": "key"
                                },
                                "id": 7794,
                                "name": "Identifier",
                                "src": "1370:3:6"
                              }
                            ],
                            "id": 7795,
                            "name": "IndexAccess",
                            "src": "1360:14:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7779,
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "value": "solution"
                            },
                            "id": 7796,
                            "name": "Identifier",
                            "src": "1377:8:6"
                          }
                        ],
                        "id": 7797,
                        "name": "Assignment",
                        "src": "1360:25:6"
                      }
                    ],
                    "id": 7798,
                    "name": "ExpressionStatement",
                    "src": "1360:25:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7753,
                              "type": "function (uint256,address)",
                              "value": "SolutionAdded"
                            },
                            "id": 7799,
                            "name": "Identifier",
                            "src": "1400:13:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "index",
                              "referencedDeclaration": 7735,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7779,
                                  "type": "struct SolnSquareVerifier.Solution memory",
                                  "value": "solution"
                                },
                                "id": 7800,
                                "name": "Identifier",
                                "src": "1414:8:6"
                              }
                            ],
                            "id": 7801,
                            "name": "MemberAccess",
                            "src": "1414:14:6"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7772,
                              "type": "address",
                              "value": "verifyAddress"
                            },
                            "id": 7802,
                            "name": "Identifier",
                            "src": "1430:13:6"
                          }
                        ],
                        "id": 7803,
                        "name": "FunctionCall",
                        "src": "1400:44:6"
                      }
                    ],
                    "id": 7804,
                    "name": "EmitStatement",
                    "src": "1395:49:6"
                  }
                ],
                "id": 7805,
                "name": "Block",
                "src": "1180:271:6"
              }
            ],
            "id": 7806,
            "name": "FunctionDefinition",
            "src": "1082:369:6"
          }
        ],
        "id": 7807,
        "name": "ContractDefinition",
        "src": "352:1323:6"
      }
    ],
    "id": 7808,
    "name": "SourceUnit",
    "src": "0:1676:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-03-27T23:41:59.943Z",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}